/*20:47~21:13
题目描述
完成一个对候选人得票的统计程序。假设有3个候选人，名字分别为Li，Zhang和Fun。使用结构体存储每一个候选人的名字和得票数。记录每一张选票的得票人名，输出每个候选人最终的得票数。结构体可以定义成如下的格式：
struct person {
    char name[20];
    int count;
}leader[3] = {“Li”, 0, “Zhang”, 0, “Fun”, 0};

输入
第一行有一个整数n，表示以下有n张选票信息将会输入。保证n不大于100。
以后的n行中，每一行包含一个人名，为选票的得票人。保证每一个人名都是Li，Zhang和Fun中的某一个。

输出
有三行，分别为Li，Zhang和Fun每人的得票数。格式为首先输出人名，其后输出一个冒号，最后输出候选人的得票数。
请注意行尾输出换行。
*/
#include<stdio.h>
#include<string.h>
struct person {
    char name[20];
    int count;
}leader[3]= {“Li”, 0, “Zhang”, 0, “Fun”, 0};;
int main(){
	int n;
	int l=f=z=0; 
	int cmp0,cmp1,cmp2;
	char a[20];
	scanf("%d",&n);//，错没有吸收回车，出现的后果是有n票，你只能输入n-1个人的名字
	for(int i=0;i<n;i++){
		scanf("%s",&a[i]);
		cmp0=(a[i],leader[0].name);//错，a[i]是一个字符，不能与后面的字符串完成映射
		cmp1=(a[i],leader[1].name);//所以将输入字符串用gets()
		cmp2=(a[i],leader[2].name);//
		if(cmp0==0)f++; 
		if(cmp1==0)l++;
		if(cmp1==0)z++;
	}
	printf("Li:%d\nZhang:%d\nFun:%d",l,z,f);
	return 0;
}
//订正
#include<stdio.h>
#include<string.h>
struct person {
    char name[20];
    int count;
}leader[3]= {"Li", 0, "Zhang", 0, "Fun", 0};;
int main(){
	int n;
	int cmp0,cmp1,cmp2;
	char a[20];
	scanf("%d",&n);
	getchar();
	for(int i=0;i<n;i++){
		gets(a);
		cmp0=strcmp(a,leader[0].name);
/*上面两行还可以改成
	scanf("%s",a);
	cmp0=strcmp(a,leader[0].name);
注意scanf("%s",a);和scanf("%s",&a[i]);我发现，还是有区别的；不信替换了试试，虽然都能编译，但是运行结果后者却不对，也不晓得为啥

*/
		cmp1=strcmp(a,leader[1].name);
		cmp2=strcmp(a,leader[2].name);
		if(cmp0==0)leader[0].count ++;
		if(cmp1==0)leader[1].count ++;
		if(cmp2==0)leader[2].count ++;
	}
	printf("Li:%d\nZhang:%d\nFun:%d",leader[0].count,leader[1].count,leader[2].count);
	return 0;
}
/*参考https://github.com/ultraji/codeup/blob/master/c1303.cpp
#include <cstdio>
#include <cstring>
using namespace std;
struct person {
	char name[20];
	int count;
}leader[3] = {{"Li", 0}, {"Zhang", 0}, {"Fun", 0}};

int main(){
	int n;
	char s[20];
	scanf("%d",&n);
	getchar();		//吸收回车
	while(n--){
		gets(s);
		for(int i = 0; i < 3; i++){
			if(strcmp(s,leader[i].name) == 0) leader[i].count ++;
		}
	}
	for(int i = 0; i < 3; i++){
		printf("%s:%d\n",leader[i].name,leader[i].count);
	}
	return 0;
}
*/
//反思，字符串那一块真的不熟啊啊啊，还有没别人写的简洁。














